#!/bin/sh

DEBUG=0
USER='mike'

if [ `whoami` != "$USER" ]; then
  sudo -u $USER "$0"
  exit
fi

TODAY=`date +%Y-%m-%d`
YESTERDAY_SEC=`date +%s --date=yesterday`

TRAC_DIR=/var/trac
TRAC_DB_PATH=trac-env/db/trac.db
TMP_DIR=/tmp/trac-backup-${TODAY}

BACKUP_USER=mikef
BACKUP_SERVER=dh.cbxt.net
BACKUP_DIR="~/trac-backup"

mkdir -p $TMP_DIR

for repo in `ls $TRAC_DIR`; do

  db_path=${TRAC_DIR}/${repo}/${TRAC_DB_PATH}
  ctime_sec=`stat -c %Z $db_path`

  if [ $ctime_sec -gt $YESTERDAY_SEC ]; then

    # new stuff.  do the backup.
    test $DEBUG -ne 0 && echo "backing up $db_path"

    backup_filename=${repo}-${TODAY}.sqlite
    sqlite3 $db_path ".backup ${TMP_DIR}/${backup_filename}"

  fi
done

# compress backup files first
test $DEBUG -ne 0 && echo "compressing backup files"
gzip --best ${TMP_DIR}/*

# rsync anything in the backup dir over
test $DEBUG -ne 0 && echo "rsync'ing files over"
rsync -a --remove-source-files ${TMP_DIR}/* ${BACKUP_USER}@${BACKUP_SERVER}:${BACKUP_DIR}/

# cleanup, dir should be empty
test $DEBUG -ne 0 && echo "cleaning up"
rmdir ${TMP_DIR}

